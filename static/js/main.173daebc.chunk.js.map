{"version":3,"sources":["Process/ProcessGraph.ts","Process/util.ts","Process/reactHelper.ts","Process/SVGLabel.tsx","Process/SVGAddBtn.tsx","Process/SVGArrow.tsx","Process/SVGLine.tsx","Process/SVGDynamicLine.tsx","Process/ObjectKeyMap.ts","Process/Orthogonal.ts","Process/ProcessLayout.ts","Process/index.tsx","ProcessEdit/util.tsx","ProcessEdit/index.tsx","App.js","serviceWorker.js","index.js"],"names":["normalizeGraphItem","item","clone","_","pick","ProcessGraph","graph","_itemMap","_isCycle","_isLinear","this","filter","i","before","length","next","map","result","left","Set","id","deq","has","every","push","delete","forEach","get","size","keys","value","sortedGraph","topologicalSort","depth","Math","max","itemMap","itemOrId","isGraphItem","deps","getDeps","union","flatten","calReverseRefs","starts","getStarts","_noCycle","stack","includes","pop","checkCycle","len","_noFork","inter","intersection","repeat","checkRepeatDependence","isTarget","available","omitNext","depId","omitBefore","dep","Array","from","transformItemToMap","o","isArray","t","k","arr","Map","set","calItemPosIn2DMatrix","items","processGraph","calDepth","maxOrder","travel","order","through","column","row","generateRandomGraph","vertex","edge","index","title","toString","random","to","addDeps","src","dst","newGraph","dstItem","find","addItem","newItem","reduce","r","useMouseEventHandler","callback","attrs","useCallback","event","stopPropagation","Object","values","useEventHandler","handler","useEffect","document","addEventListener","removeEventListener","cx","args","arg","pickBy","join","renderDemoItem","props","color","className","notAvailable","showDynamicLine","hover","style","fontWeight","SVGLabel","width","height","pos","DefaultPosition","rest","margin","useContext","ProcessContext","onMouseEnter","onMouseLeave","onMouseUp","onClick","availableTarget","mouseOnItem","renderItem","type","onMouseEnterHandler","onMouseLeaveHandler","onMouseUpHandler","onClickHandler","useMemo","itemProps","render","content","h","transform","x","y","SVGAddBtn","radius","name","hoverShowAddBtn","onMouseDown","onMouseDownHandler","SVGArrow","a","b","cos","sin","degree","atan2","cosd","sind","matrix","toFixed","d","fill","SVGLine","curve","nodes","border","sourceItem","targetItem","ref","useRef","useState","setHover","clickToRemove","showArrow","onClickLine","current","path","mid","cont","paths","tmp","slice","lastB","lastA","key","stroke","strokeWidth","markerEnd","undefined","SVGDynamicLine","svg","dynamicLineStartPos","state","frame","docX","docY","posX","posY","elX","elY","elH","elW","setState","moveHandler","cancelAnimationFrame","requestAnimationFrame","getBoundingClientRect","top","window","pageXOffset","pageYOffset","pageX","pageY","useMouse","ObjectKeyMap","data","sort","labelPosToLinePos","mapValues","v","getItemPos","mapTwoPosIntervalInLine","start","end","j","calOrthogonal","layout","lines","relation","p0","p1","p2","p3","calLinkLines","linkLines","lineRelations","verticalCount","horizontalCount","line","handledLinkLines","verticalPassedCount","horizontalPassedCount","lineWidth","opt","getOffset","countMap","passedMap","co","log","t0","t1","passed","getCenterIndex","getCanvasPosition","labelPos","calItemPosition","calItemLeftMid","calItemRightMid","last","c","offset","node","DefaultProcessLayoutOption","itemWidth","itemHeight","itemMargin","itemSpacing","addBtnRadius","paddingX","paddingY","ProcessLayout","_x","_y","createLine","exists","cardRightMid","cardLeftMid","defaultProcessContext","editable","noop","createRef","createContext","Process","layoutOption","labelLayoutAlgo","lineStyle","showTwoSides","showAddBtn","showBackground","drawLine","onClickLabel","onClickAdd","onStatusChange","onDrawLine","minWidth","minHeight","useReducer","newState","contextState","calItemPosIn2DMatrixCompact","prevEvent","isMouseDown","getAvailableTarget","onMouseMove","mouseDown","toSync","label","createLabel","relations","createOrthogonal","createAddBtn","getMinimumContainerBounding","containerBounding","Provider","useSwitch","defaultValue","setValue","defaultChecked","onChange","e","target","checked","ProcessEdit","initialGraph","_graph","setGraph","switchs","switchValues","entries","setLabelLayoutAlgo","setLineStyle","helpMsg","setHelpMsg","console","removeDeps","clickedItem","keepDeps","concat","removeItem","s","App","demoData","setData","setContent","choice","setVertex","setEdge","applyRandomData","intervalRef","benchmark","setBenchmark","interval","setInterval","clearInterval","href","float","maxWidth","overflowX","JSON","stringify","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.173daebc.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport { transformItemToMap, clone } from \"./util\";\n\nexport type ID = any; // 理应允许任何类型作为ID\n\nexport interface GraphItem<T = any> {\n  value: T;\n  id: ID;\n  before: ID[];\n  next?: GraphItem[];\n  deps?: ID[];\n  depth?: number;\n  order?: number;\n}\n\nexport type Graph<T = any> = Array<GraphItem<T>>\nexport type ItemMap<T = any> = Map<ID, GraphItem<T>>\n\nexport const isGraphItem = (item: any): item is GraphItem => item.id != null\n\nexport const normalizeGraphItem = (item: any) => clone(_.pick(item, ['id', 'value', 'before']))\n\nexport class ProcessGraph<T> {\n  public _itemMap?: ItemMap<GraphItem<T>>\n\n  constructor(public graph: Graph<T>) {\n\n  }\n\n  getStarts() {\n    return this.graph.filter(i => i.before.length === 0)\n  }\n\n  getEnds() {\n    return this.graph.filter(i => !i.next || i.next.length === 0)\n  }\n\n  getNormalizedGraph() {\n    return this.graph.map(normalizeGraphItem)\n  }\n\n  get itemMap() {\n    if (!this._itemMap) {\n      this._itemMap = transformItemToMap(this.graph)\n    }\n\n    return this._itemMap\n  }\n\n  topologicalSort(): Graph<T> {\n    const result: Graph = []\n    const left = new Set(this.graph.map(i => i.id))\n    const deq = (item: any) => {\n      if (!item || !left.has(item.id)) {\n        return\n      }\n      if (!item.before || item.before.length === 0 || item.before.every((i: number) => !left.has(i))) {\n        result.push(item)\n        left.delete(item.id)\n        return\n      }\n      item.before.forEach((i: number) => deq(this.get(i)))\n      result.push(item)\n      left.delete(item.id)\n    }\n    while (left.size !== 0) {\n      deq(this.get(left.keys().next().value))\n    }\n    return result\n  };\n\n  calDepth() {\n    const sortedGraph: Graph = this.topologicalSort()\n    sortedGraph.forEach(item => {\n      item.depth = Math.max(0, ...item.before.map(i => this.get(i)!.depth! + 1))\n    })\n    return sortedGraph\n  };\n\n  calReverseRefs() {\n    this.graph.forEach(item => {\n      item.before.forEach(id => {\n        if (!this.get(id)) {\n          return;\n        }\n        if (this.get(id)!.next) {\n          this.get(id)!.next!.push(item);\n        } else {\n          this.get(id)!.next = [item];\n        }\n      });\n    });\n  }\n\n  get(id: ID) {\n    return this.itemMap.get(id)\n  }\n\n  private getDeps(item: GraphItem<T>): ID[]\n  private getDeps(id: ID): ID[]\n  private getDeps(itemOrId: GraphItem<T> | ID): ID[] {\n    const item = isGraphItem(itemOrId) ? itemOrId : this.get(itemOrId)!\n    if (!item.deps) {\n      const deps = item.before.map(id => this.getDeps(id))\n      item.deps = _.union([...item.before, ..._.flatten(deps)])\n    }\n    return item.deps\n  }\n\n  calAllDeps() {\n    this.graph.forEach(item => this.getDeps(item))\n  }\n\n  private _isCycle?: boolean\n\n  /**\n   * @return {boolean} 是否存在环\n   */\n  checkCycle() {\n    if (this._isCycle != null) return this._isCycle\n    if (this.graph.length === 0) return this._isCycle = false\n    this.calReverseRefs()\n    const starts = this.getStarts()\n    if (starts.length === 0) return this._isCycle = true\n\n    const _noCycle = (item: any, stack: any[]) => {\n      if (stack.includes(item)) return true\n      stack.push(item)\n      for (const id of item.before) {\n        if (_noCycle(this.get(id), stack)) return true\n      }\n      stack.pop()\n      return false\n    }\n\n    return this._isCycle = starts.every(item => !_noCycle(item, []))\n  }\n\n  private _isLinear?: boolean\n\n  /**\n   * 检测图是否为一条链\n   * @return {boolean}\n   */\n  isLinear() {\n    if (this._isLinear != null) return this._isLinear\n    if (this.checkCycle()) return this._isLinear = false\n    if (this.graph.length === 0) return this._isLinear = false\n    this.calReverseRefs()\n    const starts = this.getStarts()\n    if (starts.length !== 1) return this._isLinear = false\n    let len = 0\n    const _noFork = (item: any): boolean => {\n      len += 1\n      if (item.next && item.next.length === 1) return _noFork(item.next[0])\n      if (item.next && item.next.length > 1) return false\n      return true\n    }\n    if (_noFork(starts[0])) return this._isLinear = len === this.graph.length\n    return this._isLinear = false\n  }\n\n\n  /**\n   * 检测是否存在一个元素所依赖的另一个元素已被已经依赖的一个元素依赖\n   * e.g.,\n   *   A->B->C\n   *   A->C\n   *\n   * @param {[GraphItem]} item\n   * @return {[[GraphItem, GraphItem, ID[]]]}\n   *  检测出的第一个重复依赖项；当返回结果为空时则没有检测出重复依赖\n   *  返回的第一个项为有重复依赖的元素，第二项为第一个元素的依赖元素，第三项为他们共同依赖的元素的ID数组\n   *\n   */\n  checkRepeatDependence(): [GraphItem, GraphItem, ID[]] | undefined\n  checkRepeatDependence(item: GraphItem): [GraphItem, GraphItem, ID[]] | undefined\n  checkRepeatDependence(item?: GraphItem) {\n    if (this.graph.length === 0) return\n\n    if (item) {\n      for (const id of item.before) {\n        const deps = this.getDeps(id)\n        const inter = _.intersection(deps, item.before)\n        if (inter.length > 0) {\n          return [item, this.get(id), inter]\n        }\n      }\n      return\n    }\n\n    for (const item of this.graph) {\n      const repeat = this.checkRepeatDependence(item)\n      if (repeat) return repeat\n    }\n  }\n\n  /**\n   * 计算可连接到的元素\n   * 过滤以下元素\n   * - 自身\n   * - 会造成环\n   * - 会造成重复依赖\n   * - 会造成重合边\n   * @param {Graph} graph 完整的图\n   * @param {ID} id 起始元素或目标元素的id\n   * @param {boolean} isTarget 是否传入的元素是目标元素\n   * @return {ID[]} 可安全创建依赖关系的元素ID\n   */\n  getAvailableTarget(id: ID, isTarget: boolean) {\n    if (this.graph.length === 1) return []\n    const item = this.get(id)!\n    this.calReverseRefs()\n    const available = new Set(this.graph.map(i => i.id))\n    if (isTarget) {\n      const omitNext = (item: GraphItem) => {\n        if (!item.next || item.next.length === 0) return\n        item.next.forEach(next => {\n          // 排除依赖于他的元素除他之外的依赖\n          next.before.forEach(depId => {\n            if (depId === id) return\n            available.delete(depId)\n          })\n          // 排除依赖于他的元素\n          available.delete(next.id)\n          omitNext(next)\n        })\n      }\n      omitNext(item)\n\n      const omitBefore = (item: GraphItem) => {\n        item.before.forEach(id => {\n          const before = this.get(id)!\n          omitNext(before)\n        })\n      }\n      omitBefore(item)\n      // 排除已依赖的元素\n      const deps = this.getDeps(item)\n      deps.forEach(id => {\n        available.delete(id)\n      })\n    } else {\n      const omitBefore = (item: GraphItem) => {\n        item.before.forEach(id => {\n          // 排除依赖项\n          available.delete(id)\n          const before = this.get(id)!\n          if (before.next) {\n            before.next.forEach(next => {\n              if (next === item) return\n              available.delete(next.id)\n            })\n          }\n          omitBefore(before)\n        })\n      }\n      omitBefore(item)\n      const omitNext = (item: GraphItem) => {\n        if (item.next) {\n          item.next.forEach(next => {\n            // 排除依赖自身的元素\n            available.delete(next.id)\n            // 排除依赖自身的元素除自身之外的依赖\n            next.before.forEach(dep => {\n              if (dep === id) return\n              available.delete(dep)\n            })\n            omitNext(next)\n          })\n        }\n      }\n      omitNext(item)\n    }\n    // 排除自身\n    available.delete(id)\n    return Array.from(available.keys())\n  }\n}\n","import { Coordinate } from \".\";\nimport { Graph, ProcessGraph, GraphItem, ItemMap, ID } from \"./ProcessGraph\";\n\ninterface GraphPlacement {\n  items: Graph;\n  column: number;\n  row: number;\n}\n\n/**\n * @type GraphPlacementCalculate\n *\n * 计算图中各元素在二维矩阵中的排列位置\n * 返回携带位置信息的图元素和二维矩阵的行列数\n */\nexport type GraphPlacementCalculate = (graph: Graph) => GraphPlacement;\n\nexport const clone = <T extends any>(o: T): T => {\n  if (Array.isArray(o)) {\n    return o.map(clone)\n  }\n  if (typeof o === 'object') {\n    const t: any = {}\n    for (const k in o) {\n      t[k] = clone(o[k])\n    }\n    return t\n  }\n  return o\n}\n\nexport const transformItemToMap = <T extends { id: number }>(arr: T[]) => {\n  const itemMap: ItemMap = new Map()\n  arr.forEach((i: any) => { itemMap.set(i.id, i) });\n  return itemMap;\n};\n\n/**\n * 较为紧凑的布局方式；将元素按深度顺序排列，但不可避免会有路径交叉\n */\nexport const calItemPosIn2DMatrixCompact = (graph: Graph) => {\n  const items = clone(graph)\n  const processGraph = new ProcessGraph(items)\n  processGraph.calReverseRefs()\n  processGraph.calDepth()\n  const depth: any = [];\n  items.forEach(item => {\n    const d = item.depth!;\n    if (depth[d]) {\n      depth[d].push(item);\n    } else {\n      depth[d] = [item];\n    }\n    item.order = depth[d].length - 1;\n  });\n  // return depth;\n  return { items, column: depth.length, row: Math.max(...depth.map((i: any) => i.length)) };\n};\n\n/**\n * 尽量让元素在需要连接至之后元素时位置靠下。\n * 可以一定程度减少交织；\n */\nexport const calItemPosIn2DMatrixRelax = (graph: Graph) => {\n  const items = clone(graph)\n  const processGraph = new ProcessGraph(items)\n  processGraph.calReverseRefs()\n  processGraph.calDepth()\n  const starts = processGraph.getStarts()\n  const maxOrder: number[] = [];\n  const travel = (item: any) => {\n    if (item.order != null) {\n      return;\n    }\n    if (item.next && item.next.length > 0) {\n      item.next.forEach((next: any) => {\n        travel(next);\n        if (item.order != null) {\n          return;\n        }\n        let through;\n        for (let i = item.depth; i < next.depth; i += 1) {\n          if (maxOrder[i] != null && (through == null || maxOrder[i] > through)) {\n            through = maxOrder[i];\n          }\n        }\n        item.order = through != null ? through + 1 : 0;\n        for (let i = item.depth; i < next.depth; i += 1) {\n          if (maxOrder[i] == null || item.order > maxOrder[i]) {\n            maxOrder[i] = item.order;\n          }\n        }\n      });\n    } else {\n      maxOrder[item.depth] = item.order = maxOrder[item.depth] != null ? maxOrder[item.depth] + 1 : 0;\n    }\n  };\n  starts.forEach(i => {\n    travel(i);\n  });\n  return {\n    items,\n    column: Math.max(...items.map(i => i.depth!)) + 1,\n    row: Math.max(...maxOrder) + 1,\n  };\n};\n\nexport const calItemPosIn2DMatrix: GraphPlacementCalculate = calItemPosIn2DMatrixRelax;\n// export const calItemPosIn2DMatrix = calItemPosIn2DMatrixCompact;\n\nexport const arrayToGraph = (arr: any[]) => {\n  const re = [];\n  for (let i = 0; i < arr.length; i++) {\n    const value = arr[i];\n    const item: GraphItem = {\n      id: i,\n      value,\n      before: [],\n    };\n    if (i !== 0) {\n      item.before.push(i - 1);\n    }\n    re.push(item);\n  }\n  return re;\n};\n\n/**\n * 将线性的流程转为数组\n * @param {Graph<T>} graph\n * @return {T[]}\n */\nexport const graphToArray = (graph: Graph) => {\n  const re = []\n  const processGraph = new ProcessGraph(graph)\n  processGraph.calReverseRefs()\n  const [start] = processGraph.getStarts()\n  let cur: any = start\n  while (cur) {\n    re.push(cur.value)\n    cur = cur.next && cur.next[0]\n  }\n  return re\n}\n\nexport const generateRandomGraph = (vertex: number, edge: number) => {\n  const items: any = Array.from({length: vertex}, (_, index) => {\n    return {\n      id: index,\n      value: { title: index.toString() },\n      before: [],\n    };\n  });\n  for (let i = 0; i < edge; i += 1) {\n    // tslint:disable:no-bitwise\n    const from = Math.random() * vertex << 0;\n    const to = from + Math.random() * (vertex - from) << 0;\n    if (from === to) {\n      continue;\n    }\n    items[to].before.push(from);\n  }\n  return items;\n};\n\nexport const middle = (a: Coordinate, b: Coordinate) => {\n  return { x: (a.x + b.x) / 2, y: (a.y + b.y) / 2 };\n};\n\nexport const getAvailableTarget = (graph: Graph, id: ID, isTarget: boolean) =>\n  new ProcessGraph(clone(graph)).getAvailableTarget(id, isTarget)\n\nexport const addDeps = (graph: Graph, src: ID, dst: ID) => {\n  const newGraph = clone(graph)\n  const dstItem = newGraph.find(item => item.id === dst)\n  if (!dstItem) return newGraph\n  if (dstItem.before.includes(src)) return newGraph\n  dstItem.before.push(src)\n  return newGraph\n}\n\nexport const removeDeps = (graph: Graph, src: ID, dst: ID) => {\n  const newGraph = clone(graph)\n  const dstItem = newGraph.find(item => item.id === dst)\n  if (!dstItem) return newGraph\n  dstItem.before = dstItem.before.filter(id => id !== src)\n  return newGraph\n}\n\nexport const removeItem = (graph: Graph, id: ID, keepDeps: boolean = false) => {\n  const before = keepDeps ? graph.find(item => item.id === id)!.before : []\n  const newGraph = clone(graph).filter(item => item.id !== id)\n  newGraph.filter(item => item.before.includes(id)).forEach(item => {\n    item.before = item.before.filter(depId => depId !== id).concat(before)\n  })\n  return newGraph\n}\n\nexport const addItem = <T>(graph: Graph<T>, value: T): [Graph<T>, GraphItem<T>] => {\n  const newGraph = clone(graph)\n  const id = graph.reduce((r, i) => r > i.id ? r : i.id , 0) + 1\n  const newItem: any = { id, value, before: [] };\n  newGraph.push(newItem)\n  return [newGraph, newItem]\n}\n\nexport const tailLinear = <T>(graph: Graph<T>): ID => {\n  const processGraph = new ProcessGraph(clone(graph))\n  processGraph.calReverseRefs()\n  return processGraph.getEnds().shift()!.id\n}\n\nexport const appendItem = <T>(graph: Graph<T>, value: T) => {\n  const [newGraph, newItem] = addItem(graph, value)\n  const tailId = tailLinear(newGraph)\n  return addDeps(newGraph, tailId, newItem.id)\n}\n\nexport const insertItemBefore = <T>(graph: Graph<T>, value: T, id: ID) => {\n  const [newGraph, newItem] = addItem(graph, value)\n  const processGraph = new ProcessGraph(newGraph)\n  processGraph.calReverseRefs()\n  const item = processGraph.get(id)!\n  newItem.before = item.before.slice()\n  item.before = [newItem.id]\n  return processGraph.getNormalizedGraph()\n}\n\nexport const insertItemAfter = <T>(graph: Graph<T>, value: T, id: ID) => {\n  const [newGraph, newItem] = addItem(graph, value)\n  const processGraph = new ProcessGraph(newGraph)\n  processGraph.calReverseRefs()\n  const item = processGraph.get(id)!\n  if (item.next) {\n    item.next.forEach(next => {\n      next.before = [...next.before.filter(dep => dep !== id), newItem.id]\n    })\n  }\n  newItem.before = [id]\n  return processGraph.getNormalizedGraph()\n}\n","import { useCallback, useEffect, RefObject, useRef, useState } from \"react\";\nimport _ from \"lodash\";\n\nexport interface State {\n  docX: number;\n  docY: number;\n  posX: number;\n  posY: number;\n  elX: number;\n  elY: number;\n  elH: number;\n  elW: number;\n}\n\nexport const useMouse = (ref: RefObject<Element>): State => {\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n      console.error('useMouse expects a single ref argument.');\n    }\n  }\n\n  const frame = useRef(0);\n  const [state, setState] = useState<State>({\n    docX: 0,\n    docY: 0,\n    posX: 0,\n    posY: 0,\n    elX: 0,\n    elY: 0,\n    elH: 0,\n    elW: 0,\n  });\n\n  useEffect(() => {\n    const moveHandler = (event: MouseEvent) => {\n      cancelAnimationFrame(frame.current);\n\n      frame.current = requestAnimationFrame(() => {\n        if (ref && ref.current) {\n          const { left, top, width: elW, height: elH } = ref.current.getBoundingClientRect();\n          const posX = left + window.pageXOffset;\n          const posY = top + window.pageYOffset;\n          const elX = event.pageX - posX;\n          const elY = event.pageY - posY;\n\n          setState({\n            docX: event.pageX,\n            docY: event.pageY,\n            posX,\n            posY,\n            elX,\n            elY,\n            elH,\n            elW,\n          });\n        }\n      });\n    };\n\n    document.addEventListener('mousemove', moveHandler);\n\n    return () => {\n      cancelAnimationFrame(frame.current);\n      document.removeEventListener('mousemove', moveHandler);\n    };\n  }, [ref.current]);\n\n  return state;\n};\n\nexport const useMouseEventHandler = (callback: (event: any) => any, attrs: any) => {\n  return useCallback((event: any) => {\n    event.stopPropagation()\n    callback(attrs)\n  }, [callback, ...Object.values(attrs)])\n}\n\nexport const useEventHandler = (event: string, handler: (event: any) => any) => {\n  useEffect(() => {\n    document.addEventListener(event, handler)\n    return () => document.removeEventListener(event, handler)\n  }, [handler])\n}\n\nexport const cx = (...args: (string | object)[]) => {\n  return args.map(arg => {\n    if (typeof arg === 'string') return arg\n    return _.keys(_.pickBy(arg)).join(' ')\n  }).join(' ')\n}\n","import React, { FC, SVGProps, useContext, useMemo, createElement as h } from \"react\";\nimport { ProcessContext, Coordinate, DefaultPosition, ItemRenderer } from \".\";\nimport { useMouseEventHandler, cx } from \"./reactHelper\";\n\ninterface SVGLabelProps extends SVGProps<SVGGElement> {\n  width: number\n  height: number\n  pos?: Coordinate\n  item: any\n  margin?: number\n}\n\nconst renderDemoItem: ItemRenderer = ({title, color}: any, item, props) => {\n  return <div\n    className={cx('component-process-card', {\n      'component-process-not-available': props.notAvailable,\n      'component-process-card-hover-show-remove': !props.showDynamicLine && props.hover,\n    })}\n    {...props}\n  >\n    <span style={{ color, fontWeight: 'bold' }}>\n    {title}\n    </span>\n    <div className='component-process-card-remove'>\n      点击移除\n    </div>\n  </div>\n}\n\nconst _isFunctionalComponent = (o: any): o is FC<any> => o && o.length < 2\n\nconst SVGLabel: FC<SVGLabelProps> = props => {\n  const {\n    width,\n    height,\n    pos = DefaultPosition,\n    color = '#57a3f3',\n    item,\n    margin = 0,\n    ...rest\n  } = props;\n  const {\n    onMouseEnter,\n    onMouseLeave,\n    onMouseUp,\n    onClick,\n    availableTarget,\n    showDynamicLine,\n    mouseOnItem,\n    renderItem,\n  } = useContext(ProcessContext);\n  const attrs = {item, type: 'label'}\n\n  const onMouseEnterHandler = useMouseEventHandler(onMouseEnter, attrs);\n  const onMouseLeaveHandler = useMouseEventHandler(onMouseLeave, attrs);\n  const onMouseUpHandler = useMouseEventHandler(onMouseUp, attrs);\n  const onClickHandler = useMouseEventHandler(onClick, attrs);\n\n  const notAvailable = useMemo(() =>\n    showDynamicLine && !availableTarget.includes(item.id),\n    [showDynamicLine, availableTarget],\n  )\n  const hover = !!mouseOnItem && mouseOnItem.id === item.id\n  const itemProps = {\n    hover,\n    notAvailable,\n    showDynamicLine,\n    onMouseEnter: onMouseEnterHandler,\n    onMouseLeave: onMouseLeaveHandler,\n    onClick: onClickHandler,\n  }\n  const render = renderItem || renderDemoItem\n\n  const content = useMemo(() => {\n    if (_isFunctionalComponent(render)) {\n      return h(render, {\n        item,\n        value: item.value,\n        ...itemProps,\n      })\n    } else {\n      return render(item.value, item, itemProps)\n    }\n  }, [render, item.value, item, ...Object.values(itemProps)])\n\n  return (<g\n    transform={`matrix(1,0,0,1,${pos.x},${pos.y})`}\n    onMouseUp={onMouseUpHandler}\n    {...rest}\n  >\n    <foreignObject width={width} height={height}>\n      { content }\n    </foreignObject>\n  </g>);\n};\n\nexport default SVGLabel;\n","import React, { SVGProps, FC, useContext, useCallback, useMemo } from 'react';\nimport { ProcessContext, Coordinate } from '.';\nimport { useMouseEventHandler } from './reactHelper';\n\ninterface SVGAddBtnProps extends SVGProps<SVGGElement> {\n  pos: Coordinate;\n  name: string;\n  item?: any;\n  radius: number;\n}\n\nconst SVGAddBtn: FC<SVGAddBtnProps> = ({\n  radius,\n  pos, name, item, ...rest\n}) => {\n\n  const {\n    hoverShowAddBtn,\n    showDynamicLine,\n    onMouseUp,\n    onMouseDown,\n    onMouseEnter,\n    onMouseLeave,\n    mouseOnItem,\n  } = useContext(ProcessContext);\n  const attrs = {pos, name, item, type: 'add-btn'};\n  const onMouseUpHandler = useMouseEventHandler(onMouseUp, attrs);\n  const onMouseDownHandler = useMouseEventHandler(onMouseDown, attrs);\n  const onMouseEnterHandler = useMouseEventHandler(onMouseEnter, attrs);\n  const onMouseLeaveHandler = useMouseEventHandler(onMouseLeave, attrs);\n\n  if (hoverShowAddBtn) {\n    if (showDynamicLine) return null\n    if (mouseOnItem !== item) return null\n  }\n\n  return (<g\n    transform={`matrix(1,0,0,1,${pos.x - radius},${pos.y - radius})`}\n    onMouseUp={onMouseUpHandler}\n    onMouseDown={onMouseDownHandler}\n    onMouseEnter={onMouseEnterHandler}\n    onMouseLeave={onMouseLeaveHandler}\n    {...rest}\n  >\n    <foreignObject width={20} height={20}>\n      <div className='component-process-add-btn'>+</div>\n    </foreignObject>\n  </g>);\n};\n\nexport default SVGAddBtn;\n","import React, { SVGProps, FC } from \"react\";\nimport { Coordinate } from \".\";\n\ninterface SVGArrowProps extends SVGProps<SVGGElement> {\n  a: Coordinate;\n  b: Coordinate;\n  color?: string;\n}\n\nconst SVGArrow: FC<SVGArrowProps> = props => {\n  const {\n    a, b,\n    color = '#A3B1BF',\n    ...rest\n  } = props;\n  const { cos, sin, atan2 } = Math;\n  const degree = atan2(b.y - a.y, b.x - a.x);\n  const [cosd, sind] = [cos(degree), sin(degree)];\n  // transform matrix, refer: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform\n  const matrix = [\n    cosd, sind,\n    -sind, cosd,\n    b.x, b.y,\n  ].map(i => i.toFixed(6));\n\n  return (\n    <path d='M -10 4L 0 0L -10 -4A 12 12 0 0 1 -10 4Z' fill={color} transform={`matrix(${matrix.join(',')})`} />\n  );\n};\n\nexport default SVGArrow;\n","import React, { SVGProps, FC, useState, useContext, useRef, useEffect, useMemo } from \"react\";\nimport { ProcessContext, Coordinate } from \".\";\nimport SVGArrow from \"./SVGArrow\";\n\ninterface SVGLineProps extends SVGProps<SVGGElement> {\n  a?: { x: number, y: number }\n  b?: { x: number, y: number }\n  color?: string\n  curve?: boolean\n  nodes?: Coordinate[]\n  border?: boolean\n  sourceItem?: any\n  targetItem?: any\n}\n\nconst SVGLine: FC<SVGLineProps> = props => {\n  const {\n    a, b,\n    color = '#A3B1BF',\n    curve = false,\n    nodes = [],\n    border = true,\n    sourceItem,\n    targetItem,\n    ...rest\n  } = props;\n  const ref = useRef<SVGGElement>(null);\n  const [hover, setHover] = useState(false);\n  const {clickToRemove, showArrow, onClickLine} = useContext(ProcessContext);\n\n  useEffect(() => {\n    const onMouseEnter = () => setHover(true);\n    const onMouseLeave = () => setHover(false);\n    if (ref.current && clickToRemove) {\n      ref.current.addEventListener('mouseenter', onMouseEnter);\n      ref.current.addEventListener('mouseleave', onMouseLeave);\n    }\n    return () => {\n      if (ref.current) {\n        ref.current.removeEventListener('mouseenter', onMouseEnter);\n        ref.current.removeEventListener('mouseleave', onMouseLeave);\n      }\n    };\n  }, [ref.current, clickToRemove]);\n\n  if (a) {\n    nodes.push(a);\n  }\n  if (b) {\n    nodes.push(b);\n  }\n\n  const calPath = () => {\n    if (curve) {\n      const [a, b] = nodes;\n\n      const mid = { x: (a.x + b.x) / 2, y: (a.y + b.y) / 2 }\n      const cont = { x: (a.x + mid.x) / 2, y: a.y }\n      return ['M', a.x, a.y, 'Q', cont.x + 8, cont.y, mid.x, mid.y, 'T', b.x - 8, b.y, 'L', b.x, b.y].join(' ')\n    }\n\n    const paths = [];\n    for (let i = 0; i < nodes.length - 1; i += 1) {\n      const [a, b] = [nodes[i], nodes[i + 1]];\n      paths.push(`M${a.x},${a.y}L${b.x},${b.y}`);\n    }\n    return paths.join('');\n  };\n\n  const path = useMemo(calPath, [nodes, a, b]);\n\n  const tmp = nodes.slice()\n  const lastB = tmp.pop()\n  const lastA = tmp.pop()\n\n  return (<g\n    ref={ref}\n    onClick={event => {\n      event.stopPropagation()\n      onClickLine(sourceItem, targetItem)\n    }}\n    {...rest}\n  >\n    {\n      border && <path\n        key='outerline'\n        d={path}\n        stroke='white'\n        strokeWidth={6}\n        fill='none'\n      />\n    }\n\n    <path\n      key='line'\n      d={path}\n      stroke={hover ? 'red' : color}\n      strokeWidth={2}\n      fill='none'\n      markerEnd={ showArrow ? 'url(#arrow)' : undefined }\n    />\n    { showArrow && showArrow && <SVGArrow a={lastA!} b={lastB!} color={hover ? 'red' : color} /> }\n  </g>);\n};\n\nexport default SVGLine;\n","import React, { FC, RefObject, useContext } from 'react';\nimport SVGLine from './SVGLine';\nimport { ProcessContext } from '.';\nimport { useMouse } from './reactHelper';\n\nconst SVGDynamicLine: FC = () => {\n  const {svg, showDynamicLine, dynamicLineStartPos} = useContext(ProcessContext);\n  const state = useMouse(svg);\n\n  if (!showDynamicLine) {\n    return null;\n  }\n\n  return (\n    <SVGLine\n      a={dynamicLineStartPos}\n      b={{ x: state.elX, y: state.elY }}\n      border={false}\n      className='no-transition no-mouse-events'\n    />\n  );\n};\n\nexport default SVGDynamicLine;\n","import _ from 'lodash';\n\nexport default class ObjectKeyMap<K extends { [key: string]: any }, V> {\n  public data: any = {};\n\n  public set(key: K, value: V) {\n    const keys = Object.keys(key).sort().map(i => key[i]);\n    _.set(this.data, keys, value);\n  }\n\n  public get(key: K): V {\n    const keys = Object.keys(key).sort().map(i => key[i]);\n    return _.get(this.data, keys);\n  }\n}\n","import { Coordinate } from '.';\nimport _ from 'lodash';\nimport { ProcessLayout } from './ProcessLayout';\nimport ObjectKeyMap from './ObjectKeyMap';\nimport { middle } from './util';\n\nconst calLabelPositionMap = (items: any[]) => {\n  const map = new ObjectKeyMap<Coordinate, boolean>();\n  for (const item of items) {\n    map.set({x: item.depth, y: item.order}, true);\n  }\n  return map;\n};\n\nconst labelPosToLinePosKey = <T extends {} = any>(o: {[k: number]: T}): {[k: number]: T} => _.mapKeys(o, (v, k) => +k * 4 + 1);\nconst linePosToLabelPos = <T extends object>(o: T): T => _.mapValues(o, v => +v / 4 << 0) as T;\nconst labelPosToLinePos = <T extends object>(o: T): T => _.mapValues(o, v => +v * 4 + 1) as T;\n\nconst transLabelPositionMapToLinePositionMap = <T extends {} = any>(map: ObjectKeyMap<Coordinate, T>) => {\n  const lineMapValue: any = _.mapKeys(labelPosToLinePosKey(map.data), labelPosToLinePosKey);\n  const lineMap = new ObjectKeyMap<Coordinate, number>();\n  lineMap.data = lineMapValue;\n  return lineMap;\n};\n\nconst getItemPos = (item: any): Coordinate => {\n  return { x: item.depth, y: item.order };\n};\n\n/**\n * 计算连线在布局矩阵中的坐标\n * @param items\n * @return {LinePosition[][]} 线矩阵坐标二维数组\n */\nconst calLinkLines = (items: any[]) => {\n  const lines: Coordinate[][] = [];\n  const relation: any[][] = [];\n  items.forEach(item => {\n    if (!item.next || item.next.length === 0) {\n      return;\n    }\n    item.next.forEach((next: any) => {\n      relation.push([ item, next ])\n      const [a, b] = [item, next].map(getItemPos).map(labelPosToLinePos);\n      if (next.order === item.order) {\n        const p0 = { x: a.x + 1, y: a.y };\n        const p1 = { x: b.x - 1, y: b.y };\n        lines.push([ p0, p1 ]);\n      } else if (next.order > item.order) {\n        const p0 = { x: a.x + 1, y: a.y };\n        const p1 = { x: a.x + 2, y: a.y };\n        const p2 = { x: a.x + 2, y: b.y };\n        const p3 = { x: b.x - 1, y: b.y };\n        lines.push([ p0, p1, p2, p3 ]);\n      } else {\n        const p0 = { x: a.x + 1, y: a.y };\n        const p1 = { x: b.x - 2, y: a.y };\n        const p2 = { x: b.x - 2, y: b.y };\n        const p3 = { x: b.x - 1, y: b.y };\n        lines.push([ p0, p1, p2, p3 ]);\n      }\n    });\n  });\n  return [lines, relation];\n};\n\nconst mapTwoPosIntervalInLine = (a: Coordinate, b: Coordinate, map: (co: Coordinate) => any) => {\n  if (a.x === b.x) {\n    const [start, end] = a.y < b.y ? [a.y, b.y] : [b.y, a.y];\n    for (let j = start; j < end + 1; j += 1) {\n      const k = { x: a.x, y: j };\n      map(k);\n    }\n  }\n  if (a.y === b.y) {\n    const [start, end] = a.x < b.x ? [a.x, b.x] : [b.x, a.x];\n    for (let j = start; j < end + 1; j += 1) {\n      const k = { x: j, y: a.y };\n      map(k);\n    }\n  }\n}\n\nexport const calOrthogonal = (items: any[], layout: ProcessLayout) => {\n\n  // const labelPositionMap = calLabelPositionMap(items);\n  // label 在线坐标中的映射；用于连线躲避 label 计算\n  // const labelPositionLineMap = transLabelPositionMapToLinePositionMap(labelPositionMap);\n\n  const [linkLines, lineRelations] = calLinkLines(items);\n  const verticalCount = new ObjectKeyMap<Coordinate, number>();\n  const horizontalCount = new ObjectKeyMap<Coordinate, number>();\n\n  linkLines.forEach(line => {\n    for (let i = 0; i < line.length - 1; i += 1) {\n      const [a, b] = [line[i], line[i + 1]];\n      if (a.x === b.x) {\n        const [start, end] = a.y < b.y ? [a.y, b.y] : [b.y, a.y];\n        for (let j = start; j < end + 1; j += 1) {\n          const k = { x: a.x, y: j };\n          const v = verticalCount.get(k);\n          verticalCount.set(k, v == null ? 1 : v + 1);\n        }\n      }\n      if (a.y === b.y) {\n        const [start, end] = a.x < b.x ? [a.x, b.x] : [b.x, a.x];\n        for (let j = start; j < end + 1; j += 1) {\n          const k = { x: j, y: a.y };\n          const v = horizontalCount.get(k);\n          horizontalCount.set(k, v == null ? 1 : v + 1);\n        }\n      }\n    }\n  });\n\n  // 计算后的偏移节点数组\n  const handledLinkLines: Coordinate[][] = [];\n\n  const verticalPassedCount = new ObjectKeyMap<Coordinate, boolean[]>();\n  const horizontalPassedCount = new ObjectKeyMap<Coordinate, boolean[]>();\n  const lineWidth = layout.opt.lineWidth;\n\n  const getCenterIndex = (arr: boolean[]) => {\n    let i = 0;\n    while (true) {\n      if (!arr[i]) return i;\n      if (!arr[-i]) return -i;\n      i += 1;\n    }\n  }\n\n  const getOffset = (\n    countMap: ObjectKeyMap<Coordinate, number>,\n    passedMap: ObjectKeyMap<Coordinate, boolean[]>,\n    co: Coordinate,\n    to?: Coordinate,\n    log?: boolean,\n  ) => {\n\n    if (to) {\n\n      const i = (() => {\n        let i = 0;\n        while (true) {\n          const t0: any[] = [];\n          mapTwoPosIntervalInLine(co, to, t => {\n            const arr = passedMap.get(t) || [];\n            t0.push(!arr[i]);\n          })\n          if (t0.every(a => a)) return i;\n          const t1: any[] = [];\n          mapTwoPosIntervalInLine(co, to, t => {\n            const arr = passedMap.get(t) || [];\n            t1.push(!arr[-i]);\n          })\n          if (t1.every(a => a)) return -i;\n          i += 1;\n        }\n      })()\n\n      mapTwoPosIntervalInLine(co, to, t => {\n        const passed = passedMap.get(t) || [];\n        passed[i] = true;\n        passedMap.set(t, passed);\n      })\n      return i * lineWidth;\n    } else {\n      const passed = passedMap.get(co) || [];\n      const i = getCenterIndex(passed);\n\n      passed[i] = true;\n      passedMap.set(co, passed);\n\n      return i * lineWidth;\n    }\n\n  }\n\n  const getCanvasPosition = (co: Coordinate) => {\n    const labelPos = linePosToLabelPos(co);\n    if (co.x % 4 === 0) {\n      const pos = layout.calItemPosition(labelPos.x, labelPos.y);\n      return layout.calItemLeftMid(pos);\n    }\n\n    if (co.x % 4 === 2) {\n      const pos = layout.calItemPosition(labelPos.x, labelPos.y);\n      return layout.calItemRightMid(pos);\n    }\n\n    const pos = middle(\n      layout.calItemRightMid(layout.calItemPosition(labelPos.x, labelPos.y)),\n      layout.calItemLeftMid(layout.calItemPosition(labelPos.x + 1, labelPos.y)),\n    );\n    return pos;\n  }\n\n  linkLines.forEach(line => {\n    const nodes: Coordinate[] = [];\n    let last: Coordinate\n    for (let i = 0; i < line.length - 1; i += 1) {\n      const [a, b, c] = [line[i], line[i + 1], line[i + 2]];\n      if (a.x === b.x) {\n        const offset = getOffset(horizontalCount, horizontalPassedCount, b, c, true);\n        const node = last = { x: last!.x, y: getCanvasPosition(b).y + offset };\n        nodes.push(node);\n      }\n      if (a.y === b.y) {\n        if (i === 0) {\n          const offset = getOffset(horizontalCount, horizontalPassedCount, a, b);\n          const node = last = { x: getCanvasPosition(a).x, y: getCanvasPosition(a).y + offset };\n          nodes.push(node);\n        }\n        if (i === line.length - 2) {\n          const node = last = { x: getCanvasPosition(b).x, y: last!.y };\n          nodes.push(node);\n        } else {\n          const offset = getOffset(verticalCount, verticalPassedCount, b, c);\n          const node = last = { x: getCanvasPosition(b).x + offset, y: last!.y };\n          nodes.push(node);\n        }\n      }\n    }\n    handledLinkLines.push(nodes);\n  })\n\n  return [handledLinkLines, lineRelations];\n};\n","import { Coordinate } from \".\"\n\nexport interface ProcessLayoutOption {\n  itemWidth: number;  // 元素宽度\n  itemHeight: number; // 元素高度\n  itemMargin: number; // 元素和SVG容器之间的距离\n  itemSpacing: number; // 布局时元素之间的宽度\n  addBtnRadius: number; // 加号按钮的半径\n  lineWidth: number; // 线的宽度\n  paddingX: number; // 画布时横向两边的空间\n  paddingY: number; // 画布时纵向两边的空间\n}\n\nconst DefaultProcessLayoutOption: ProcessLayoutOption = {\n  itemWidth: 200,\n  itemHeight: 44,\n  itemMargin: 0,\n  itemSpacing: 40,\n  addBtnRadius: 10,\n  lineWidth: 5,\n  paddingX: 50,\n  paddingY: 50,\n}\n\nexport class ProcessLayout {\n  opt: ProcessLayoutOption\n  constructor(opt?: Partial<ProcessLayoutOption>) {\n    this.opt = { ...DefaultProcessLayoutOption, ...opt }\n  }\n\n  get itemWidth() {\n    return this.opt.itemWidth\n  }\n\n  get itemHeight() {\n    return this.opt.itemHeight\n  }\n\n  get itemMargin() {\n    return this.opt.itemMargin\n  }\n\n  get itemSpacing() {\n    return this.opt.itemSpacing\n  }\n\n  getMinimumContainerBounding(column: number, row: number) {\n    return {\n      width: this.itemWidth * column + this.itemSpacing * (column - 1) + this.opt.paddingX * 2,\n      height: this.itemHeight * row + this.itemSpacing * (row - 1) + this.opt.paddingY * 2,\n    }\n  }\n\n  /**\n   * 计算元素在默认布局中的绘图坐标，锚点为左上角\n   * @param {number} _x 默认布局中，在布局矩阵中的坐标\n   * @param {number} _y 默认布局中，在布局矩阵中的坐标\n   * @return {Coordinate}\n   */\n  calItemPosition(_x: number, _y: number): Coordinate {\n    const x = this.opt.paddingX + (this.opt.itemWidth + this.opt.itemSpacing) * _x;\n    const y = (this.opt.itemHeight + this.opt.itemSpacing) * _y + this.opt.paddingY;\n    return {x, y};\n  }\n\n  /**\n   * 根据元素锚点的坐标计算元素特殊位置的坐标\n   * @param {number} _x 默认布局中，在布局矩阵中的坐标\n   * @param {number} _y 默认布局中，在布局矩阵中的坐标\n   * @return {Coordinate}\n   */\n  calItemLeftMid({x, y}: Coordinate): Coordinate {\n    return {\n      x: x + this.opt.itemMargin,\n      y: y + this.opt.itemHeight / 2,\n    };\n  }\n\n  calItemRightMid({x, y}: Coordinate): Coordinate {\n    return {\n      x: x + this.opt.itemWidth - this.opt.itemMargin,\n      y: y + this.opt.itemHeight / 2,\n    };\n  }\n}\n","import React, { SVGProps, FC, createContext, useRef, useMemo, useState, useReducer, useCallback, RefObject, createRef, useEffect } from 'react';\nimport SVGLabel from './SVGLabel';\nimport SVGAddBtn from './SVGAddBtn';\nimport './process.css';\nimport SVGLine from './SVGLine';\nimport { calItemPosIn2DMatrix, calItemPosIn2DMatrixCompact, getAvailableTarget } from './util';\nimport SVGDynamicLine from './SVGDynamicLine';\nimport _ from 'lodash';\nimport { calOrthogonal } from './Orthogonal';\nimport { Graph, ProcessGraph, GraphItem } from './ProcessGraph';\nimport { ProcessLayout, ProcessLayoutOption } from './ProcessLayout';\nimport { useEventHandler, cx } from './reactHelper';\n\nexport interface Coordinate {\n  x: number;\n  y: number;\n}\n\nexport const DefaultPosition = { x: 0, y: 0 };\n\ninterface Service {\n  title: string;\n  color?: string;\n  active?: boolean;\n}\n\nexport interface ProcessProps extends SVGProps<SVGSVGElement> {\n  layoutOption?: Partial<ProcessLayoutOption>\n  labelLayoutAlgo?: string;\n  graph: Graph;\n  lineStyle?: 'line' | 'polyline' | 'curve';\n  showTwoSides?: boolean;\n  showAddBtn?: boolean;\n  hoverShowAddBtn?: boolean;\n  showArrow?: boolean;\n  showBackground?: boolean;\n  editable?: boolean;\n  clickToRemove?: boolean;\n  drawLine?: boolean;\n\n  minWidth?: number;\n  minHeight?: number;\n  width?: number;\n  height?: number;\n\n  onClickLabel?: (service: Service) => any;\n  onClickAdd?: (event: any) => any;\n  onClickLine?: (start: any, end: any) => any;\n  onDrawLine?: (start: any, end: any) => any;\n  onStatusChange?: (status: any) => any,\n\n  renderItem?: ItemRenderer | ItemComponent\n}\n\nconst createLabel = (items: Graph, layout: ProcessLayout) => {\n  return items.map((item: any) => {\n    const pos = layout.calItemPosition(item.depth, item.order);\n    const label = <SVGLabel\n      width={layout.itemWidth}\n      height={layout.itemHeight}\n      margin={layout.itemMargin}\n      key={'label-' + item.id}\n      pos={pos}\n      item={item}\n    />\n\n    item.cardLeftMid = layout.calItemLeftMid(pos);\n    item.cardRightMid = layout.calItemRightMid(pos);\n\n    return label\n  })\n}\n\nconst createLine = (items: any[], layout: ProcessLayout, {\n  curve = false,\n}: any) => {\n  const content = []\n  const exists: any = {};\n  for (const item of items) {\n    if (!item.next) {\n      continue;\n    }\n    for (const next of item.next) {\n      const key = 'line-' + item.id + '-' + next.id;\n      if (exists[key]) {\n        continue;\n      }\n      exists[key] = true;\n      content.push(<SVGLine\n        curve={curve}\n        key={key}\n        a={item.cardRightMid}\n        b={next.cardLeftMid}\n        sourceItem={item}\n        targetItem={next}\n      />);\n    }\n  }\n  return content\n}\n\nconst createOrthogonal = (items: any[], layout: ProcessLayout) => {\n  const [lines, relations] = calOrthogonal(items, layout)\n  return lines.map((nodes, i) => {\n    return <SVGLine\n      nodes={nodes}\n      key={'line-polyline-' + i}\n      sourceItem={relations[i][0]}\n      targetItem={relations[i][1]}\n    />\n  })\n}\n\nconst createAddBtn = (items: any[], layout: ProcessLayout) => {\n  const content = []\n  for (const item of items) {\n    content.push(<SVGAddBtn\n      key={'add-btn-left-' + item.id}\n      name='left'\n      pos={item.cardLeftMid}\n      item={item}\n      radius={layout.opt.addBtnRadius}\n    />)\n    content.push(<SVGAddBtn\n      key={'add-btn-right-' + item.id}\n      name='right'\n      pos={item.cardRightMid}\n      item={item}\n      radius={layout.opt.addBtnRadius}\n    />)\n  }\n  return content\n};\n\nconst createDynamicLine = () => {\n  return <SVGDynamicLine\n    key='dynamic-line'\n  />\n};\n\nconst defaultProcessContext = {\n  editable: false,\n  clickToRemove: false,\n  showDynamicLine: false,\n  showArrow: true,\n  hoverShowAddBtn: true,\n  dynamicLineStartPos: DefaultPosition,\n  onClick: _.noop,\n  onClickLine: _.noop,\n  onMouseUp: _.noop,\n  onMouseDown: _.noop,\n  onMouseEnter: _.noop,\n  onMouseLeave: _.noop,\n  availableTarget: [],\n  mouseOnItem: null,\n  svg: createRef<SVGSVGElement>(),\n}\nexport type AnyFunction = (...args: any[]) => any\ninterface ItemProps {\n  hover: boolean\n  notAvailable: boolean\n  showDynamicLine: boolean\n  onMouseEnter: AnyFunction\n  onMouseLeave: AnyFunction\n  onClick: AnyFunction\n}\nexport type ItemRenderer = <T>(value: T, item: GraphItem<T>, state: ItemProps) => JSX.Element\nexport interface ItemComponentProps<T> extends ItemProps {\n  value: T\n  item: GraphItem<T>\n}\nexport type ItemComponent<T = any> = FC<ItemComponentProps<T>>\ninterface ProcessContextType {\n  editable: boolean\n  clickToRemove: boolean\n  showDynamicLine: boolean\n  showArrow: boolean\n  hoverShowAddBtn: boolean\n  dynamicLineStartPos: Coordinate\n  onClick: AnyFunction\n  onClickLine: AnyFunction\n  onMouseUp: AnyFunction\n  onMouseDown: AnyFunction\n  onMouseEnter: AnyFunction\n  onMouseLeave: AnyFunction\n  availableTarget: any[]\n  mouseOnItem: GraphItem | null\n  svg: RefObject<SVGSVGElement>\n  renderItem?: ItemRenderer | ItemComponent\n}\n\nexport const ProcessContext = createContext<ProcessContextType>(defaultProcessContext);\n\n/**\n * 主要思路：\n * - 采用迭代的方式计算元素位置以提高性能并简化计算\n * - 将计算分解，响应式计算所需部分\n * - Process 组件只做展示和交互，不实际储存流程和卡片数据，数据完全由 props 控制\n *\n * TODO:\n *  - [ ] 点击事件由最外层组件响应\n */\nconst Process: FC<ProcessProps> = props => {\n  const {\n    layoutOption,\n    labelLayoutAlgo = 'relax',\n    lineStyle = 'polyline',\n    showTwoSides = false,\n    showAddBtn = false,\n    hoverShowAddBtn = false,\n    showArrow = false,\n    showBackground = false,\n    editable = false,\n    drawLine = false,\n    clickToRemove = false,\n    onClickLabel = _.noop,\n    onClickAdd = _.noop,\n    onClickLine = _.noop,\n    onStatusChange = _.noop,\n    onDrawLine = _.noop,\n    minWidth, minHeight, width, height,\n    renderItem,\n    graph,\n    ...rest\n  } = props;\n\n  const svg = useRef<SVGSVGElement>(null);\n  const [contextState, setState] = useReducer((state, newState: Partial<ProcessContextType>) => {\n    return {\n      ...state,\n      ...newState,\n    }\n  }, {\n    ...defaultProcessContext,\n    svg,\n    onClickLine,\n    showArrow,\n    availableTarget: [],\n    mouseOnItem: null,\n    showDynamicLine: false,\n    dynamicLineStartPos: DefaultPosition,\n  })\n\n  const {items, column, row}: any = useMemo(() => {\n    if (labelLayoutAlgo === 'compact') return calItemPosIn2DMatrixCompact(graph)\n    if (labelLayoutAlgo === 'relax') return calItemPosIn2DMatrix(graph)\n    return {}\n  }, [graph, labelLayoutAlgo])\n\n  const prevEvent = useRef<any>(null)\n  const isMouseDown = useRef<boolean>(false)\n\n  const onMouseEnter = useCallback((event: any) => {\n    if (event.item) setState({ mouseOnItem: event.item })\n  }, [])\n\n  const onMouseLeave = useCallback((event: any) => {\n    setState({ mouseOnItem: null })\n  }, [])\n\n  const onClick = useCallback((event: any) => {\n    if (event.type === 'add-btn') return onClickAdd(event)\n    if (event.type === 'label') return onClickLabel(event.item)\n  }, [onClickAdd, onClickLabel])\n\n  const onMouseDown = useCallback((event: any) => {\n    if (event.type === 'add-btn') {\n      setState({ dynamicLineStartPos: event.pos })\n      onStatusChange('mouse-down-add')\n    }\n    prevEvent.current = event\n    isMouseDown.current = true\n    if (event.item) {\n      const availableTarget = getAvailableTarget(items, event.item.id, event.name === 'left')\n      setState({ availableTarget })\n    }\n  }, [items])\n\n  const onMouseUp = useCallback((event: any) => {\n    onStatusChange('mouse-up')\n    if (!contextState.showDynamicLine) {\n      onClick(event);\n    } else if (prevEvent.current && event.type === 'label' && contextState.availableTarget.includes(event.item.id)) {\n      if (prevEvent.current.name === 'left') {\n        onDrawLine(event, prevEvent.current);\n      } else {\n        onDrawLine(prevEvent.current, event);\n      }\n\n    }\n    isMouseDown.current = false\n    setState({\n      showDynamicLine: false,\n      availableTarget: [],\n    })\n  }, [isMouseDown, prevEvent, contextState.showDynamicLine, contextState.availableTarget])\n\n  const onMouseMove = useCallback((event: any) => {\n    if (!drawLine) return\n    if (isMouseDown.current) {\n      setState({\n        showDynamicLine: true,\n      })\n    }\n  }, [isMouseDown, contextState.mouseDown, drawLine])\n\n  useEventHandler('mousemove', onMouseMove)\n  useEventHandler('mouseup', onMouseUp)\n\n  // sync props with context\n  const toSync = {\n    editable,\n    clickToRemove,\n    showArrow,\n    onClickLine,\n    hoverShowAddBtn,\n    onMouseUp,\n    onMouseDown,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n    renderItem,\n  }\n  useEffect(() => setState(toSync), Object.values(toSync))\n\n  const layout = useMemo(() => new ProcessLayout(layoutOption), [layoutOption])\n\n  // generate react elements\n  const [content, containerBounding] = useMemo(() => {\n    const content: (JSX.Element[] | JSX.Element)[] = []\n    content.push(createLabel(items, layout))\n\n    if (lineStyle === 'polyline') content.push(createOrthogonal(items, layout))\n    else if (lineStyle === 'line') content.push(createLine(items, layout, { curve: false }))\n    else if (lineStyle === 'curve') content.push(createLine(items, layout, { curve: true }))\n\n    if (editable) {\n      content.push(createDynamicLine())\n      if (showAddBtn) content.push(createAddBtn(items, layout))\n    }\n\n    return [content, layout.getMinimumContainerBounding(column, row)];\n  }, [items, layout, editable, showAddBtn, lineStyle])\n\n  return <svg\n    ref={svg}\n    width={width || Math.max(containerBounding.width, minWidth || 0)}\n    height={height || Math.max(containerBounding.height, minHeight || 0)}\n    className={cx('component-process', {\n      'component-process-background-grid': showBackground,\n    })}\n    {...rest}\n  >\n    <ProcessContext.Provider\n      value={contextState}\n    >\n      {content}\n    </ProcessContext.Provider>\n  </svg>;\n};\n\nexport default Process;\n\nexport * from './util'\n","import React, { useState, Fragment } from 'react'\n\nexport const useSwitch = (name: string, defaultValue: boolean) => {\n  const [value, setValue] = useState(defaultValue)\n  return [\n    value,\n    <Fragment>\n      {name}: <input type=\"checkbox\" defaultChecked={value} onChange={e => setValue(e.target.checked)}></input>\n    </Fragment>,\n  ]\n}\n","import React, { FC, useState, useCallback, useEffect, useRef } from 'react';\nimport { generateRandomGraph, addDeps, removeDeps, removeItem, addItem } from '../Process/util';\nimport Process from '../Process';\nimport { useSwitch } from './util';\nimport { Graph } from '../Process/ProcessGraph';\n\nconst ProcessEdit: FC<{\n  initialGraph: Graph;\n  graph?: Graph;\n}> = ({ initialGraph, graph: _graph }) => {\n  const [graph, setGraph] = useState(initialGraph);\n  useEffect(() => {\n    if (_graph) setGraph(_graph)\n  }, [_graph])\n\n  const onDrawLine = (start: any, end: any) => {\n    console.log('drawline', start, end)\n    setGraph(graph => addDeps(graph, start.item.id, end.item.id));\n  };\n  const onClickLine = (start: any, end: any) => {\n    console.log('clickline', start, end);\n    setGraph(graph => removeDeps(graph, start.id, end.id));\n  };\n  const onClickLabel = (item: any) => {\n    console.log('clicklabel', item);\n    setGraph(graph => removeItem(graph, item.id))\n  };\n  const onClickAdd = ({item, name}: any) => {\n    setGraph(graph => {\n      console.log('clickadd', item)\n      const id = graph.reduce((r, i) => r > i.id ? r : i.id , 0) + 1;\n      const [newGraph, newItem] = addItem(graph, { title: id })\n      const clickedItem = newGraph.find(({id}) => id === item.id);\n      if (!clickedItem) {\n        return newGraph\n      }\n      if (name === 'right') {\n        newItem.before.push(clickedItem.id);\n      } else if (name === 'left') {\n        clickedItem.before.push(newItem.id);\n      }\n      return newGraph\n    });\n  };\n\n  const defaultValues = {\n    editable: true,\n    clickToRemove: true,\n    showTwoSides: false,\n    showAddBtn: true,\n    hoverShowAddBtn: true,\n    showArrow: true,\n    showBackground: false,\n    drawLine: true,\n  }\n\n  const switchs: any[] = []\n  const switchValues: any = {}\n  for (const [name, defaultValue] of Object.entries(defaultValues)) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [value, content] = useSwitch(name, defaultValue)\n    switchs.push(content)\n    switchValues[name] = value\n  }\n\n  const [labelLayoutAlgo, setLabelLayoutAlgo] = useState('relax')\n  const [lineStyle, setLineStyle] = useState('polyline')\n  const [helpMsg, setHelpMsg] = useState('')\n\n  return (\n    <div>\n      <div>\n        <div>\n          <button\n            onClick={() => {\n              const id = graph.reduce((r, i) => r > i.id ? r : i.id , 0) + 1;\n              const newItem: any = { id, value: {title: id}, before: [] };\n              graph.push(newItem);\n              setGraph([...graph])\n            }}\n          >add item</button>\n        </div>\n        <div>\n          { switchs }\n        </div>\n        <div>\n          label layout algorithm: <select\n            defaultValue={labelLayoutAlgo}\n            onChange={e => setLabelLayoutAlgo(e.target.value)}\n          >\n            <option value=\"compact\">compact</option>\n            <option value=\"relax\">relax</option>\n          </select>\n        </div>\n        <div>\n          line style: <select\n            defaultValue={lineStyle}\n            onChange={e => setLineStyle(e.target.value)}\n          >\n            <option value=\"polyline\">polyline</option>\n            <option value=\"line\">line</option>\n            <option value=\"curve\">curve</option>\n          </select>\n        </div>\n        <div>\n          帮助信息：{helpMsg}\n        </div>\n      </div>\n      <div>\n        <Process\n          layoutOption={{\n            itemMargin: 5,\n          }}\n          labelLayoutAlgo={labelLayoutAlgo}\n          lineStyle={lineStyle}\n          graph={graph}\n          {...switchValues}\n          onDrawLine={onDrawLine}\n          onClickLine={onClickLine}\n          onClickAdd={onClickAdd}\n          onClickLabel={onClickLabel}\n          onStatusChange={s => {\n            if (s === 'mouse-down-add') {\n              setHelpMsg('拖动创建依赖关系')\n            } else if (s === 'mouse-up') {\n              setHelpMsg('')\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProcessEdit;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ProcessEdit from './ProcessEdit'\nimport { generateRandomGraph } from './Process/util';\n\nfunction App() {\n\n  useEffect(() => {\n    document.title = 'process component demo';\n  }, [])\n\n  const demoData = [\n    ['linear case', [\n      { id: 'A', value: { title: 'A' }, before: [] },\n      { id: 'B', value: { title: 'B' }, before: ['A'] },\n      { id: 'C', value: { title: 'C' }, before: ['B'] },\n      { id: 'D', value: { title: 'D' }, before: ['C'] },\n    ]],\n    ['simple case 0', [\n      { id: 1, value: { title: '1' }, before: [] },\n      { id: 2, value: { title: '2' }, before: [1] },\n      { id: 3, value: { title: '3' }, before: [2] },\n      { id: 4, value: { title: '4' }, before: [1] },\n      { id: 5, value: { title: '5' }, before: [2] },\n      { id: 6, value: { title: '6' }, before: [4] },\n      { id: 7, value: { title: '7' }, before: [5] },\n      { id: 8, value: { title: '8' }, before: [2] },\n      { id: 9, value: { title: '9' }, before: [] },\n      { id: 10, value: { title: '10' }, before: [3] },\n    ]],\n    ['simple case 2', [\n      { id: 100, value: { title: 'start' }, before: [] },\n      { id: 200, value: { title: 'end' }, before: [2, 6] },\n      { id: 0, value: {title: '0'}, before: [100] },\n      { id: 1, value: {title: '1'}, before: [0] },\n      { id: 2, value: {title: '2'}, before: [1, 4, 5] },\n      { id: 3, value: {title: '3'}, before: [0] },\n      { id: 4, value: {title: '4'}, before: [3] },\n      { id: 5, value: {title: '5'}, before: [3] },\n      { id: 6, value: {title: '6'}, before: [100] },\n    ]],\n    ['test 0',\n      [\n        { id: 'A', value: { title: 'A' }, before: [] },\n        { id: 'B', value: { title: 'B' }, before: ['A'] },\n        { id: 'C', value: { title: 'C' }, before: ['A'] },\n        { id: 'D', value: { title: 'D' }, before: ['B', 'C'] },\n      ]\n    ],\n    ['test 2',\n      [\n        { id: 'A', value: { title: 'A' }, before: [] },\n        { id: 'B', value: { title: 'B' }, before: ['A'] },\n        { id: 'C', value: { title: 'C' }, before: ['B', 'E'] },\n        { id: 'D', value: { title: 'D' }, before: ['C'] },\n        { id: 'E', value: { title: 'E' }, before: ['F'] },\n        { id: 'F', value: { title: 'F' }, before: [] },\n        { id: 'G', value: { title: 'G' }, before: ['C'] },\n      ]\n    ],\n  ]\n\n  const [data, setData] = useState(demoData[0][1]);\n  const [content, setContent] = useState(<ProcessEdit\n    initialGraph={data}\n  />);\n\n  const choice = demoData.map(([name, data]) => {\n    return <button onClick={() => {\n      setData(data)\n      setContent(<ProcessEdit\n        initialGraph={data}\n        graph={[...data]}\n      />)\n    }}>{name}</button>\n  })\n\n  const [vertex, setVertex] = useState(100)\n  const [edge, setEdge] = useState(100)\n\n  const applyRandomData = () => {\n    const t = generateRandomGraph(+vertex, +edge)\n    console.log(vertex, edge, t)\n    setData(t)\n    setContent(<ProcessEdit\n      initialGraph={t}\n      graph={[...t]}\n    />)\n  }\n\n  choice.push(<button\n    onClick={applyRandomData}\n  >\n    generate random data\n  </button>)\n\n\n  const intervalRef = useRef(null)\n  const [benchmark, setBenchmark] = useState(false)\n\n  useEffect(() => {\n    if (benchmark) {\n      const interval = setInterval(() => {\n        applyRandomData()\n      }, +intervalRef.current.value)\n      return () => clearInterval(interval)\n    }\n  }, [benchmark])\n\n  return (\n    <div>\n      <h1>process component demo</h1>\n      <div>\n        <a href='https://bytedance.feishu.cn/space/doc/doccnHj8Lu9KFXxKPR78YjzKmDf#'><h1>文档</h1></a>\n      </div>\n      <div>\n        <div>\n          vertex: <input type='number' defaultValue={vertex} onChange={e => setVertex(e.target.value)} />\n          edge: <input type='number' defaultValue={edge} onChange={e => setEdge(e.target.value)} />\n        </div>\n        {choice}\n\n        <div>\n          interval: <input defaultValue='100' ref={intervalRef} ></input>\n          <button\n            onClick={() => {\n              setBenchmark(!benchmark)\n            }}\n          >{ benchmark ? 'stop' : 'benchmark' }</button>\n        </div>\n      </div>\n      <div>\n        <div style={{ float: 'left', maxWidth: '80%', overflowX: 'scroll' }}>\n          {content}\n        </div>\n        <div style={{ float: 'right' }}>\n          <div>data:</div>\n          <textarea\n            style={{ maxWidth: '100%', height: 500 }}\n            value={JSON.stringify(data, null, 4)}\n          ></textarea>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}